(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{399:function(t,a,r){"use strict";r.r(a);var e=r(13),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"url对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url对象"}},[t._v("#")]),t._v(" URL对象")]),t._v(" "),a("h2",{attrs:{id:"url-的编码和解码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-的编码和解码"}},[t._v("#")]),t._v(" URL 的编码和解码")]),t._v(" "),a("p",[t._v("网页的 URL 只能包含合法的字符")]),t._v(" "),a("ol",[a("li",[t._v("URL 元字符：分号（;），逗号（,），斜杠（/），问号（?），冒号（:），at（@），&，等号（=），加号（+），美元符号（$），井号（#）")]),t._v(" "),a("li",[t._v("语义字符：a-z，A-Z，0-9，连词号（-），下划线（_），点（.），感叹号（!），波浪线（~），星号（*），单引号（’），圆括号（()）")])]),t._v(" "),a("p",[t._v("其他字符出现在 URL 之中都必须转义"),a("br"),t._v("\nJavaScript 提供四个 URL 的编码/解码方法：")]),t._v(" "),a("ul",[a("li",[t._v("encodeURL(): 唯一参数整个URL")]),t._v(" "),a("li",[t._v("encodeURLComponent(): 用于转码 URL 的组成部分")]),t._v(" "),a("li",[t._v("decodeURL(): 用于整个 URL 的解码")]),t._v(" "),a("li",[t._v("decodeURIComponent(): 用于URL 片段的解码")])]),t._v(" "),a("h2",{attrs:{id:"url接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url接口"}},[t._v("#")]),t._v(" URL接口")]),t._v(" "),a("p",[t._v("URL接口是一个构造函数，浏览器原生提供，可以用来构造、解析和编码 URL。一般情况下，通过window.URL可以拿到这个构造函数。")]),t._v(" "),a("h3",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),a("p",[t._v("URL作为构造函数，可以生成 URL 实例。它接受一个表示 URL 的字符串作为参数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.example.com/index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nurl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'http://www.example.com/index.html'")]),t._v("\n")])])]),a("h3",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),a("ul",[a("li",[t._v("URL.href: 返回整个 URL")]),t._v(" "),a("li",[t._v("URL.protocol：返回协议，以冒号:结尾")]),t._v(" "),a("li",[t._v("URL.hostname：返回域名")]),t._v(" "),a("li",[t._v("URL.host：返回域名与端口，包含:号，默认的80和443端口会省略")]),t._v(" "),a("li",[t._v("URL.port：返回端口")]),t._v(" "),a("li",[t._v("URL.origin：返回协议、域名和端口")]),t._v(" "),a("li",[t._v("URL.pathname：返回路径，以斜杠/开头")]),t._v(" "),a("li",[t._v("URL.search：返回查询字符串，以问号?开头")]),t._v(" "),a("li",[t._v("URL.searchParams：返回一个URLSearchParams实例，该属性是Location对象没有的")]),t._v(" "),a("li",[t._v("URL.hash：返回片段识别符，以井号#开头")]),t._v(" "),a("li",[t._v("URL.password：返回域名前面的密码")]),t._v(" "),a("li",[t._v("URL.username：返回域名前面的用户名")])]),t._v(" "),a("h2",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),a("h3",{attrs:{id:"url-createobjecturl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-createobjecturl"}},[t._v("#")]),t._v(" URL.createObjectURL()")]),t._v(" "),a("p",[t._v("用来为上传/下载的文件、流媒体文件生成一个 URL 字符串。这个字符串代表了File对象或Blob对象的 URL。")]),t._v(" "),a("ul",[a("li",[t._v("将文件转化为url\n每次使用URL.createObjectURL()方法，都会在内存里面生成一个 URL 实例\n消耗内存")])]),t._v(" "),a("h3",{attrs:{id:"url-revokeobjecturl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-revokeobjecturl"}},[t._v("#")]),t._v(" URL.revokeObjectURl()")]),t._v(" "),a("p",[t._v("释放url实例")])])}),[],!1,null,null,null);a.default=s.exports}}]);