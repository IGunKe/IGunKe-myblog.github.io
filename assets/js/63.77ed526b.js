(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{329:function(t,s,e){"use strict";e.r(s);var a=e(13),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_03-类型推论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-类型推论"}},[t._v("#")]),t._v(" 03 类型推论")]),t._v(" "),s("p",[t._v("如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myFavoriteNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyFavoriteNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.ts(2,1): error TS2322: Type 'number' is not assignable to type 'string'.")]),t._v("\n")])])]),s("p",[t._v("TypeScript 会在没有明确的指定类型的时候推测出一个类型,这就是类型推论。\n"),s("br"),t._v(" "),s("font",{attrs:{color:"red"}},[t._v("注意：")]),t._v("如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 any 类型而完全不被类型检查：")],1)])}),[],!1,null,null,null);s.default=r.exports}}]);