(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{356:function(t,e,r){"use strict";r.r(e);var s=r(13),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据监测原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据监测原理"}},[t._v("#")]),t._v(" 数据监测原理")]),t._v(" "),e("h2",{attrs:{id:"vue-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-set"}},[t._v("#")]),t._v(" Vue.set()")]),t._v(" "),e("p",[t._v("Vue.set( target, propertyName/index, value )\n向响应式对象中添加一个 property，并确保这个新 property 同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新 property，因为 Vue 无法探测普通的新增 property (比如")]),t._v(" "),e("h2",{attrs:{id:"数据监测-数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据监测-数组"}},[t._v("#")]),t._v(" 数据监测--数组")]),t._v(" "),e("p",[t._v("改变数组中的值要通过vue封装的api实现，这些api与js中的一样"),e("br"),e("br"),t._v("\npush,pop,unshift,shift,splice,sort,reverse\n"),e("br")]),t._v(" "),e("h2",{attrs:{id:"替换数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#替换数组"}},[t._v("#")]),t._v(" 替换数组")]),t._v(" "),e("p",[t._v("filter()、concat() 和 slice()。它们不会变更原始数组，而总是返回一个新数组。当使用非变更方法时，可以用新数组替换旧数组")])])}),[],!1,null,null,null);e.default=a.exports}}]);