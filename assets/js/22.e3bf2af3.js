(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{291:function(t,e,i){"use strict";i.r(e);var a=i(13),l=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"坐标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#坐标"}},[t._v("#")]),t._v(" 坐标")]),t._v(" "),e("ul",[e("li",[t._v("相对于窗口：clientX/clientY")]),t._v(" "),e("li",[t._v("相对于文档：pageX/pageY")])]),t._v(" "),e("h2",{attrs:{id:"元素坐标-getboundingclientrect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素坐标-getboundingclientrect"}},[t._v("#")]),t._v(" 元素坐标：getBoundingClientRect")]),t._v(" "),e("p",[t._v("主要的 DOMRect 属性：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("x/y —— 矩形原点相对于窗口的 X/Y 坐标，")])]),t._v(" "),e("li",[e("p",[t._v("width/height —— 矩形的 width/height（可以为负）。\n此外，还有派生（derived）属性：")])]),t._v(" "),e("li",[e("p",[t._v("top/bottom —— 顶部/底部矩形边缘的 Y 坐标，")])]),t._v(" "),e("li",[e("p",[t._v("left/right —— 左/右矩形边缘的 X 坐标。")])])]),t._v(" "),e("h2",{attrs:{id:"文档坐标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档坐标"}},[t._v("#")]),t._v(" 文档坐标")]),t._v(" "),e("ul",[e("li",[t._v("pageY = clientY + 文档的垂直滚动出的部分的高度。")]),t._v(" "),e("li",[t._v("pageX = clientX + 文档的水平滚动出的部分的宽度。")])])])}),[],!1,null,null,null);e.default=l.exports}}]);